{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCsBxDC,IAAAA,aAAiBC,IAAI,4BAA4B,YAC/CC,EAAAA,EAAAA,UAASC,IAAAA,UAAgB,cAAc,SAAUC,EAAUC,GACzD,GAAoB,WAAhBA,EAAKC,OAAqB,CAC5B,IAAMC,EAASF,EAAKE,SAEpB,OAAOP,IAAAA,WAAeQ,MAAM,6CAA8C,CACxED,OAAAA,GAEJ,CAEA,OAAOH,EAASC,EAClB,GACF,G","sources":["webpack://@ordinaryjellyfish/sentra/webpack/bootstrap","webpack://@ordinaryjellyfish/sentra/webpack/runtime/compat get default export","webpack://@ordinaryjellyfish/sentra/webpack/runtime/define property getters","webpack://@ordinaryjellyfish/sentra/webpack/runtime/hasOwnProperty shorthand","webpack://@ordinaryjellyfish/sentra/external root \"flarum.core.compat['forum/app']\"","webpack://@ordinaryjellyfish/sentra/external root \"flarum.core.compat['common/extend']\"","webpack://@ordinaryjellyfish/sentra/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@ordinaryjellyfish/sentra/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Post'];","/*\n * Sentra - Intelligent community management and moderation for Flarum.\n * Copyright (C) 2025  Tristian Kelly <me@ordinaryjellyfish.xyz>\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport app from 'flarum/forum/app';\nimport { override } from 'flarum/common/extend';\nimport Post from 'flarum/forum/components/Post';\n\napp.initializers.add('ordinaryjellyfish/sentra', () => {\n  override(Post.prototype, 'flagReason', function (original, flag) {\n    if (flag.type() === 'sentra') {\n      const reason = flag.reason();\n\n      return app.translator.trans('ordinaryjellyfish-sentra.forum.flag_reason', {\n        reason,\n      });\n    }\n\n    return original(flag);\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","override","Post","original","flag","type","reason","trans"],"sourceRoot":""}